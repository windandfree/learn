<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--开启包的自动扫描-->
    <context:component-scan base-package="com.umbrella.learnmq"/>
    
    <!--配置生产者-->
    <bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL" value="tcp://192.168.1.115:61616"/>
            </bean>
        </property>
        <property name="maxConnections" value="100"/>
    </bean>
    
    <!--配置目的地 =queue-->
    <bean id="destinationQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="spring-activemq-queue"></constructor-arg>
    </bean>

    <!--配置目的地 =topic-->
    <bean id="destinationTopic" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg index="0" value="spring-activemq-topic"></constructor-arg>
    </bean>
    
    <!--配置提供JMS的工具类，他可以进行消息发送和接收-->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsFactory"/>
        <property name="defaultDestination" ref="destinationTopic"/>
        <property name="messageConverter">
            <bean class="org.springframework.jms.support.converter.SimpleMessageConverter"/>
        </property>
    </bean>
    
    <!--设置监听器，不用启动消费者 就能自动消费-->
    <bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsFactory"/>
        <!--注意这里应该和template中的目的地一样-->
        <property name="destination" ref="destinationTopic"/>
        <!--public class MyMessagelistener implements MessageListener-->
        <property name="messageListener" ref="myMessageListener"/>
    </bean>
    <!--<bean id="myMessageListener" class="com.umbrella.learnmq.spring.MyMessageListener"/>-->
</beans>